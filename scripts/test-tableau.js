#!/usr/bin/env node
/**
 * Tableau Integration Test Script
 * Dedicated testing for Tableau Cloud/Server connections
 */

const TABLEAU_CONFIG = {
  server_url: 'https://10ax.online.tableau.com', // Your Tableau Cloud URL
  site_id: 'your-site-name', // Your site name from Tableau Cloud
  content_url: 'your-site-name', // Usually same as site_id
  api_version: '3.19',
  
  // Method 1: Personal Access Token (RECOMMENDED)
  personal_access_token_name: 'Dashboard Hub Integration',
  personal_access_token_secret: 'YOUR_TOKEN_SECRET',
  
  // Method 2: Username/Password (if no PAT available)
  // username: 'your@email.com',
  // password: 'yourpassword'
}

const API_URL = 'http://localhost:3000/api/integrations/test'

console.log('üìä TABLEAU INTEGRATION TEST')
console.log('===========================')
console.log('')

async function testTableauIntegration() {
  console.log('üîç Configuration Check:')
  console.log(`Server URL: ${TABLEAU_CONFIG.server_url}`)
  console.log(`Site ID: ${TABLEAU_CONFIG.site_id}`)
  console.log(`API Version: ${TABLEAU_CONFIG.api_version}`)
  
  if (TABLEAU_CONFIG.personal_access_token_name) {
    console.log(`PAT Name: ${TABLEAU_CONFIG.personal_access_token_name}`)
    console.log(`PAT Secret: ${'*'.repeat(20)}`)
  } else if (TABLEAU_CONFIG.username) {
    console.log(`Username: ${TABLEAU_CONFIG.username}`)
    console.log(`Password: ${'*'.repeat(TABLEAU_CONFIG.password?.length || 0)}`)
  } else {
    console.log('‚ùå No authentication method configured!')
    return
  }
  
  console.log('\nüöÄ Testing connection...')
  
  try {
    const response = await fetch(API_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        platform: 'tableau',
        config: TABLEAU_CONFIG
      })
    })
    
    console.log(`üìä Response: ${response.status} ${response.statusText}`)
    
    const result = await response.json()
    
    if (result.success) {
      console.log('\n‚úÖ TABLEAU CONNECTION SUCCESSFUL!')
      console.log('üìã Server Information:')
      if (result.data) {
        console.log(`   Server Version: ${result.data.server_version || 'Unknown'}`)
        console.log(`   Site Name: ${result.data.site_name || 'Unknown'}`)
        console.log(`   API Version: ${result.data.api_version || 'Unknown'}`)
        console.log(`   Permissions: ${result.data.user_permissions?.join(', ') || 'Unknown'}`)
      }
      
      console.log('\nüéØ Next Steps:')
      console.log('1. Create some workbooks in your Tableau site')
      console.log('2. Test dashboard discovery with the sync feature')
      console.log('3. Try embedding dashboards in your app')
      
    } else {
      console.log('\n‚ùå TABLEAU CONNECTION FAILED')
      console.log(`Error: ${result.error}`)
      
      console.log('\nüîß Troubleshooting:')
      if (result.error?.includes('401') || result.error?.includes('Authentication failed')) {
        console.log('‚Ä¢ Check your Personal Access Token name and secret')
        console.log('‚Ä¢ Verify your username and password if using that method')
        console.log('‚Ä¢ Ensure your Tableau site is accessible')
      } else if (result.error?.includes('404')) {
        console.log('‚Ä¢ Verify your server_url is correct')
        console.log('‚Ä¢ Check that your site_id matches your Tableau site name')
        console.log('‚Ä¢ Ensure your site is active and accessible')
      } else if (result.error?.includes('No authentication credentials')) {
        console.log('‚Ä¢ Configure either Personal Access Token or username/password')
        console.log('‚Ä¢ Personal Access Token is the recommended method')
      } else {
        console.log('‚Ä¢ Check Tableau server status')
        console.log('‚Ä¢ Verify network connectivity')
        console.log('‚Ä¢ Review Tableau site permissions')
      }
    }
    
  } catch (error) {
    console.log('\n‚ùå TEST FAILED')
    console.log(`Error: ${error.message}`)
    
    if (error.message.includes('ECONNREFUSED')) {
      console.log('\nüí° Make sure your dev server is running:')
      console.log('   npm run dev')
    }
  }
}

console.log('üìù Setup Instructions:')
console.log('1. Update TABLEAU_CONFIG with your Tableau Cloud credentials')
console.log('2. Get Personal Access Token from Tableau Cloud ‚Üí My Account Settings')
console.log('3. Make sure your dev server is running (npm run dev)')
console.log('4. Run: node scripts/test-tableau.js')
console.log('')

if (import.meta.url === `file://${process.argv[1]}`) {
  testTableauIntegration().catch(console.error)
}